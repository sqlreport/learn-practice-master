{
    "name": "React TypeScript + Flask + PostgreSQL",
    "dockerComposeFile": [
        "../docker-compose.codespace.yml"
    ],
    "service": "workspace",
    "workspaceFolder": "/workspace",
    "shutdownAction": "stopCompose",
    // Features to install
    "features": {
        "ghcr.io/devcontainers/features/node:1": {
            "version": "18"
        },
        "ghcr.io/devcontainers/features/python:1": {
            "version": "3.11"
        },
        "ghcr.io/devcontainers/features/docker-in-docker:2": {},
        "ghcr.io/devcontainers/features/github-cli:1": {}
    },
    // Configure tool-specific properties
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",
                "ms-python.flake8",
                "ms-python.black-formatter",
                "bradlc.vscode-tailwindcss",
                "esbenp.prettier-vscode",
                "ms-vscode.vscode-typescript-next",
                "ms-vscode.vscode-json",
                "ms-vscode-remote.remote-containers",
                "ms-azuretools.vscode-docker",
                "ckolkman.vscode-postgres",
                "formulahendry.auto-rename-tag",
                "christian-kohler.path-intellisense"
            ],
            "settings": {
                "python.defaultInterpreterPath": "/usr/local/bin/python",
                "python.formatting.provider": "black",
                "editor.formatOnSave": true,
                "editor.codeActionsOnSave": {
                    "source.organizeImports": "explicit"
                },
                "typescript.preferences.importModuleSpecifier": "relative"
            }
        }
    },
    // Use 'forwardPorts' to make a list of ports inside the container available locally
    "forwardPorts": [
        3000,
        5000,
        5432,
        80
    ],
    "portsAttributes": {
        "3000": {
            "label": "Frontend (React)",
            "onAutoForward": "notify"
        },
        "5000": {
            "label": "Backend (Flask)",
            "onAutoForward": "notify"
        },
        "5432": {
            "label": "Database (PostgreSQL)",
            "onAutoForward": "silent"
        },
        "80": {
            "label": "Production App",
            "onAutoForward": "notify"
        }
    },
    // Use 'postCreateCommand' to run commands after the container is created
    "postCreateCommand": "bash .devcontainer/setup.sh",
    // Use 'postStartCommand' to run commands each time the container starts
    "postStartCommand": "bash .devcontainer/post-start.sh",
    // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root
    "remoteUser": "vscode",
    // Environment variables for the container
    "containerEnv": {
        "FLASK_ENV": "development",
        "NODE_ENV": "development"
    }
}